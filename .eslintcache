[{"/Users/aatikaseedat/Documents/data-visualiser/src/index.js":"1","/Users/aatikaseedat/Documents/data-visualiser/src/App.js":"2","/Users/aatikaseedat/Documents/data-visualiser/src/serviceWorker.js":"3","/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/store.js":"4","/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Reducers/ReduxReducer.js":"5","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Navigation/UserNavigation.tsx":"6","/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/ReduxState.js":"7","/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Actions/ReducerActionTypes.js":"8","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Navigation/TabPanel.js":"9","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Settings/Settings.js":"10","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Home/Home.js":"11","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Export/Export.js":"12","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/PlottingPage.tsx":"13","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/PlottingNav.tsx":"14","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/Import/ImportedFileStats.tsx":"15","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Notifications/AlertNotification.tsx":"16","/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/ImportFilesHandler.tsx":"17","/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/NotificationsHandler.tsx":"18","/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/INotification.tsx":"19","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LinePlottingPage.tsx":"20","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/ImportFileData.tsx":"21","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/ResetImportedData.tsx":"22","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/ResetAnalysedData.tsx":"23","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/AnalyseFileData.tsx":"24","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LinePlottingOptions.tsx":"25","/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Actions/ReducerActions.tsx":"26","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/CreateAnalysedData.tsx":"27","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/GetImportedData.tsx":"28","/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/LinePlotOptionsHandler.tsx":"29","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/CreateImportedData.tsx":"30","/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/plotting/ILinePlotOptions.tsx":"31","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/FileProcessors/CSVProcessor.tsx":"32","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/ResetLinePlotOptions.tsx":"33","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/CreateLinePlotOptions.tsx":"34","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/GetLinePlotOptions.tsx":"35","/Users/aatikaseedat/Documents/data-visualiser/src/domain/LineSeriesVis/LineSeriesOptionsValidate.tsx":"36","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/ImportFilesComponent.tsx":"37","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/Analyse/FileAnalysisComponent.tsx":"38","/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/LineSeriesVisHandler.tsx":"39","/Users/aatikaseedat/Documents/data-visualiser/src/domain/LineSeriesVis/LineSeriesCreateVis.tsx":"40","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/GetAnalysedData.tsx":"41","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/CurrentVisualisation/ResetCurrentVisualisation.tsx":"42","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/CurrentVisualisation/CreateCurrentVisualisation.tsx":"43","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LineSeriesVis.tsx":"44"},{"size":1620,"mtime":1609579694144,"results":"45","hashOfConfig":"46"},{"size":233,"mtime":1609946572554,"results":"47","hashOfConfig":"46"},{"size":5854,"mtime":1608309343000,"results":"48","hashOfConfig":"46"},{"size":215,"mtime":1608735235191,"results":"49","hashOfConfig":"46"},{"size":2724,"mtime":1610638113370,"results":"50","hashOfConfig":"46"},{"size":2803,"mtime":1609580084041,"results":"51","hashOfConfig":"46"},{"size":296,"mtime":1610637978367,"results":"52","hashOfConfig":"46"},{"size":750,"mtime":1610637814328,"results":"53","hashOfConfig":"46"},{"size":601,"mtime":1608732474371,"results":"54","hashOfConfig":"46"},{"size":966,"mtime":1608732749916,"results":"55","hashOfConfig":"46"},{"size":614,"mtime":1610558733032,"results":"56","hashOfConfig":"46"},{"size":962,"mtime":1608732474397,"results":"57","hashOfConfig":"46"},{"size":550,"mtime":1609327048703,"results":"58","hashOfConfig":"46"},{"size":5075,"mtime":1609748221737,"results":"59","hashOfConfig":"46"},{"size":2272,"mtime":1609946362973,"results":"60","hashOfConfig":"46"},{"size":405,"mtime":1609946360400,"results":"61","hashOfConfig":"46"},{"size":1687,"mtime":1610366515337,"results":"62","hashOfConfig":"46"},{"size":607,"mtime":1610266600513,"results":"63","hashOfConfig":"46"},{"size":168,"mtime":1609490556775,"results":"64","hashOfConfig":"46"},{"size":949,"mtime":1610787931801,"results":"65","hashOfConfig":"46"},{"size":2487,"mtime":1610266600603,"results":"66","hashOfConfig":"46"},{"size":264,"mtime":1608733523669,"results":"67","hashOfConfig":"46"},{"size":258,"mtime":1608733523665,"results":"68","hashOfConfig":"46"},{"size":3806,"mtime":1610557000243,"results":"69","hashOfConfig":"46"},{"size":15825,"mtime":1610870954444,"results":"70","hashOfConfig":"46"},{"size":1793,"mtime":1610637805106,"results":"71","hashOfConfig":"46"},{"size":749,"mtime":1608733523683,"results":"72","hashOfConfig":"46"},{"size":799,"mtime":1609946360577,"results":"73","hashOfConfig":"46"},{"size":1725,"mtime":1610640470313,"results":"74","hashOfConfig":"46"},{"size":769,"mtime":1609946360428,"results":"75","hashOfConfig":"46"},{"size":625,"mtime":1610870868345,"results":"76","hashOfConfig":"46"},{"size":1805,"mtime":1610266600528,"results":"77","hashOfConfig":"46"},{"size":263,"mtime":1610027177763,"results":"78","hashOfConfig":"46"},{"size":498,"mtime":1610027217593,"results":"79","hashOfConfig":"46"},{"size":285,"mtime":1610027556180,"results":"80","hashOfConfig":"46"},{"size":1778,"mtime":1610870868354,"results":"81","hashOfConfig":"46"},{"size":7717,"mtime":1610731910016,"results":"82","hashOfConfig":"46"},{"size":5320,"mtime":1610783169416,"results":"83","hashOfConfig":"46"},{"size":703,"mtime":1610640470189,"results":"84","hashOfConfig":"46"},{"size":2448,"mtime":1610870868336,"results":"85","hashOfConfig":"46"},{"size":649,"mtime":1609946360456,"results":"86","hashOfConfig":"46"},{"size":276,"mtime":1610638778765,"results":"87","hashOfConfig":"46"},{"size":522,"mtime":1610638594826,"results":"88","hashOfConfig":"46"},{"size":2911,"mtime":1610791598666,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1llt5h",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"103"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"103"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"103"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"103"},"/Users/aatikaseedat/Documents/data-visualiser/src/index.js",[],["186","187"],"/Users/aatikaseedat/Documents/data-visualiser/src/App.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/serviceWorker.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/store.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Reducers/ReduxReducer.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Navigation/UserNavigation.tsx",[],["188","189"],"/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/ReduxState.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Actions/ReducerActionTypes.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Navigation/TabPanel.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Settings/Settings.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Home/Home.js",["190"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nimport ImportFilesComponent from '../ImportFileHandling/ImportFilesComponent';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    alignItemsAndJustifyContent: {\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'pink',\n    },\n}));\n\nexport default function Home() {\n    return (\n        <main id={'home-page'}>\n            <ImportFilesComponent />\n        </main>\n    );\n}\n","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Export/Export.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/PlottingPage.tsx",["191"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport PlottingNav from './PlottingNav';\nimport { Box } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(16),\n            height: theme.spacing(16),\n        },\n    },\n}));\n\nexport default function PlottingPage() {\n    return (\n        <Box>\n            <PlottingNav />\n        </Box>\n    );\n}\n","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/PlottingNav.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/Import/ImportedFileStats.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Notifications/AlertNotification.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/ImportFilesHandler.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/NotificationsHandler.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/INotification.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LinePlottingPage.tsx",["192","193","194","195","196","197","198"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Grid } from '@material-ui/core';\nimport { LineSeries, XYPlot, VerticalGridLines, HorizontalGridLines, XAxis, YAxis } from 'react-vis';\nimport LineSeriesVis from './LineSeriesVis';\nimport LinePlottingOptions from './LinePlottingOptions';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n    },\n}));\n\nexport default function LinePlottingPage() {\n    const classes = useStyles();\n    return (\n        <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            className={classes.root}\n            id={'line-plotting-page'}\n        >\n            <Box mx={10}>\n                <LineSeriesVis />\n            </Box>\n            <Box mx={10}>\n                <LinePlottingOptions />\n            </Box>\n        </Box>\n    );\n}\n","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/ImportFileData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/ResetImportedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/ResetAnalysedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/AnalyseFileData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LinePlottingOptions.tsx",["199","200"],"/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Actions/ReducerActions.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/CreateAnalysedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/GetImportedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/LinePlotOptionsHandler.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/CreateImportedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/plotting/ILinePlotOptions.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/FileProcessors/CSVProcessor.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/ResetLinePlotOptions.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/CreateLinePlotOptions.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/GetLinePlotOptions.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/LineSeriesVis/LineSeriesOptionsValidate.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/ImportFilesComponent.tsx",["201","202","203","204"],"import React from 'react';\nimport { Box, Button, Container, Divider, Grid, IconButton, makeStyles, Paper, Tooltip } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DropzoneArea } from 'material-ui-dropzone';\n\nimport { AlertType } from '../../../interfaces/INotification';\n\nimport { NotificationsHandler } from '../../../UIHandling/NotificationsHandler';\nimport { ImportFilesHandler } from '../../../UIHandling/ImportFilesHandler';\n\nimport { AlertNotification } from '../Notifications/AlertNotification';\nimport { IImportedFile } from '../../../interfaces/import/IImportedFile';\n\nimport ImportedFileStats from './Import/ImportedFileStats';\nimport { IImportedFileStats } from '../../../interfaces/import/IImportedFileStats';\nimport FileAnalysisComponent from './Analyse/FileAnalysisComponent';\n\ninterface IState {\n    importedFiles: Array<File>;\n    submitButtonDisabled: boolean;\n    outcome: AlertType | undefined;\n    outcomeMessage: string;\n    errors: NotificationsHandler;\n    files: string;\n    fileType: string;\n    importedFileStats: IImportedFileStats;\n}\nexport default class ImportFilesComponent extends React.Component<{}, IState> {\n    private classes: any = makeStyles((theme) => ({\n        root: {\n            height: '100%',\n            width: '75%',\n        },\n        componentArea: {\n            height: '70%',\n            width: '75%',\n        },\n        container: {\n            width: '100%',\n        },\n        previewChip: {\n            minWidth: 160,\n            maxWidth: 210,\n        },\n        verticalLine: {\n            background: theme.palette.primary.light,\n            width: '2px',\n            margin: theme.spacing(7),\n        },\n        space: {\n            minWidth: '10%',\n        },\n    }));\n    constructor(props: object) {\n        super(props);\n        this.state = {\n            importedFiles: [],\n            submitButtonDisabled: true,\n            outcome: undefined,\n            outcomeMessage: '',\n            errors: new NotificationsHandler(),\n            files: '',\n            fileType: '',\n            importedFileStats: {\n                fileType: '',\n                fileSize: '',\n                characterCount: undefined,\n            },\n        };\n    }\n    private static checkFileType(files: File[]): string {\n        const file = files[0];\n        return file.type;\n    }\n    private async addFiles(files: File[]) {\n        this.setState({ importedFiles: files });\n        if (files.length > 0) {\n            const allFiles = await files[0].text();\n            this.setState({\n                submitButtonDisabled: false,\n                files: allFiles,\n                fileType: ImportFilesComponent.checkFileType(files),\n                importedFileStats: {\n                    fileType: ImportFilesComponent.checkFileType(files),\n                    fileSize: (files[0].size / 1000).toString(),\n                    characterCount: allFiles.length,\n                },\n            });\n        } else {\n            this.setState({\n                submitButtonDisabled: true,\n            });\n        }\n    }\n    private async uploadFiles() {\n        const file: IImportedFile = {\n            file: this.state.files,\n            fileType: this.state.fileType,\n        };\n        const files = new ImportFilesHandler(file);\n        const errors: NotificationsHandler = files.validate();\n        if (errors.isEmpty()) {\n            try {\n                this.setState({\n                    outcome: AlertType.SUCCESS,\n                    outcomeMessage: 'Files successfully uploaded',\n                });\n            } catch (e) {\n                this.setState({\n                    outcome: AlertType.FAILED,\n                    outcomeMessage: `${e.notification}`,\n                });\n            }\n        } else {\n            this.setState({ errors });\n        }\n    }\n    private resetFiles() {\n        const file: IImportedFile = {\n            file: this.state.files,\n            fileType: this.state.fileType,\n        };\n        const files = new ImportFilesHandler(file);\n        files.resetImportedData();\n        files.resetAnalysedData();\n        this.setState({\n            importedFiles: [],\n            submitButtonDisabled: true,\n            outcome: undefined,\n            outcomeMessage: '',\n            errors: new NotificationsHandler(),\n            files: '',\n            fileType: '',\n            importedFileStats: {\n                fileType: '',\n                fileSize: '',\n                characterCount: undefined,\n            },\n        });\n    }\n    public render() {\n        return (\n            <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n                alignItems=\"center\"\n                className={this.classes.root}\n                id={'import-file-component'}\n                my={15}\n                mx={15}\n            >\n                <Box style={{ height: '50%', width: '50%' }} my={15} id={'alert-area'}>\n                    {this.state.outcome && (\n                        <AlertNotification alert={this.state.outcome} notification={this.state.outcomeMessage} />\n                    )}\n                    {!this.state.errors.isEmpty() && (\n                        <AlertNotification\n                            alert={AlertType.FAILED}\n                            notification={`Error(s): ${this.state.errors.notification()}`}\n                        />\n                    )}\n                </Box>\n                <Box\n                    display=\"flex\"\n                    flexDirection=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"flex-start\"\n                    className={this.classes.componentArea}\n                >\n                    <Box id=\"drop-zone-area\" mx={15} my={15}>\n                        <Tooltip title=\"Delete Imported File from system\">\n                            <IconButton\n                                color=\"primary\"\n                                style={{ marginRight: 10, borderRadius: '5em' }}\n                                id=\"delete-import-button\"\n                                disabled={this.state.submitButtonDisabled}\n                                onClick={() => {\n                                    this.resetFiles();\n                                }}\n                            >\n                                <DeleteIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <DropzoneArea\n                            showPreviews={true}\n                            onChange={async (files) => {\n                                await this.addFiles(files);\n                                await this.uploadFiles();\n                            }}\n                            showPreviewsInDropzone={false}\n                            useChipsForPreview\n                            previewGridProps={{ container: { spacing: 1, direction: 'row' } }}\n                            previewChipProps={{ classes: { root: this.classes.previewChip } }}\n                            previewText=\"Selected files\"\n                            clearOnUnmount={true}\n                            acceptedFiles={['text/csv']}\n                            filesLimit={1}\n                        />\n\n                        <ImportedFileStats {...this.state.importedFileStats} />\n                    </Box>\n                    <Box mx={15} my={15}>\n                        <Divider orientation=\"vertical\" flexItem className={this.classes.verticalLine} />\n                        <FileAnalysisComponent />\n                    </Box>\n                </Box>\n            </Box>\n        );\n    }\n}\n","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/Analyse/FileAnalysisComponent.tsx",["205","206"],"import React from 'react';\nimport { Box, CssBaseline, Typography, CircularProgress, Chip, Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactJson from 'react-json-view';\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        height: '100%',\n        margin: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    chips: {\n        backgroundColor: theme.palette.secondary.main,\n        margin: theme.spacing(1),\n        textColor: theme.palette.secondary.contrastText,\n    },\n    statDescription: {\n        margin: theme.spacing(1),\n        textAlign: 'left',\n        color: theme.palette.text.primary,\n    },\n    donutChart: {\n        margin: theme.spacing(2),\n    },\n    exampleObject: {\n        textColor: theme.palette.text.primary,\n    },\n    boxSize: {\n        maxWidth: '300px',\n    },\n}));\nfunction calcIntColumnsPercentage(intColumns: number, allColumns: number): number {\n    if (intColumns === 0 || allColumns === 0) {\n        return 0;\n    }\n    return Math.round((intColumns / allColumns) * 100);\n}\nfunction getExampleObject(integerDataObjects: Array<object>): Object {\n    if (integerDataObjects.length === 0) {\n        return {};\n    }\n    const [firstObject] = integerDataObjects;\n    const objectToReturn: Object = {};\n    for (const [key, value] of Object.entries(firstObject)) {\n        // @ts-ignore\n        objectToReturn[key] = value;\n    }\n    return objectToReturn;\n}\nfunction calcNumberOfIgnoredObjects(integerDataObjects: Array<object>, dataAsObjects: Array<object>): number {\n    const analysedDataLength = integerDataObjects.length;\n    const importedDataLength = dataAsObjects.length;\n    return importedDataLength - analysedDataLength;\n}\nfunction FileAnalysisComponent(props: any) {\n    const classes = useStyles();\n    return (\n        <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"flex-start\"\n            alignItems=\"flex-start\"\n            id=\"file-analysis\"\n        >\n            <Box id=\"title\">\n                <Typography variant=\"h4\" style={{ paddingBottom: '20px' }} id=\"file-analysis-title\">\n                    File Analysis:\n                </Typography>\n            </Box>\n            <Box my={15} id=\"percent-integer-columns\">\n                <Typography className={classes.statDescription}>Percentage of Integer Columns in file:</Typography>\n                <Box position=\"relative\" display=\"inline-flex\" className={classes.donutChart}>\n                    <CircularProgress\n                        id={'circular-progress'}\n                        variant=\"determinate\"\n                        {...props}\n                        color=\"primary\"\n                        thickness={7}\n                        size={200}\n                        value={calcIntColumnsPercentage(props.integerFields.length, props.dataFields.length)}\n                    />\n                    <Box\n                        id={'circular-progress-text'}\n                        top={0}\n                        left={0}\n                        bottom={0}\n                        right={0}\n                        position=\"absolute\"\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                    >\n                        <Typography variant=\"h3\" component=\"div\" color=\"textPrimary\">{`${calcIntColumnsPercentage(\n                            props.integerFields.length,\n                            props.dataFields.length\n                        )}%`}</Typography>\n                    </Box>\n                </Box>\n            </Box>\n            <Box id=\"integer-columns\" className={classes.boxSize}>\n                <Typography className={classes.statDescription}>Integer Columns:</Typography>\n                {props.integerFields.map((integerField: string) => (\n                    <Chip className={classes.chips} label={integerField} id={integerField + '-chip'} />\n                ))}\n            </Box>\n            <Box my={15} id=\"ignored-objects\">\n                <Typography className={classes.statDescription}>Number of Ignored Data Objects:</Typography>\n                <Typography className={classes.statDescription}>\n                    {`${calcNumberOfIgnoredObjects(props.integerDataObjects, props.dataAsObjects)}`}\n                </Typography>\n            </Box>\n            <Box id=\"example-object\" className={classes.boxSize}>\n                <Typography className={classes.statDescription}>Example Data Object:</Typography>\n                <Box id={'json-object'}>\n                    <ReactJson\n                        src={getExampleObject(props.integerDataObjects)}\n                        theme=\"summerfruit:inverted\"\n                        displayDataTypes={false}\n                        displayObjectSize={false}\n                    />\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n\nconst mapStateToProps = (state: any) => ({\n    integerFields: state.analysedData.integerFields,\n    integerDataObjects: state.analysedData.integerDataObjects,\n    dataFields: state.importedData.dataFields,\n    dataAsObjects: state.importedData.dataAsObjects,\n});\nexport default connect(mapStateToProps, {})(FileAnalysisComponent);\n","/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/LineSeriesVisHandler.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/LineSeriesVis/LineSeriesCreateVis.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/GetAnalysedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/CurrentVisualisation/ResetCurrentVisualisation.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/CurrentVisualisation/CreateCurrentVisualisation.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LineSeriesVis.tsx",["207","208","209","210","211","212","213","214"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Grid, List } from '@material-ui/core';\nimport {\n    LineSeries,\n    XYPlot,\n    VerticalGridLines,\n    HorizontalGridLines,\n    XAxis,\n    YAxis,\n    ChartLabel,\n    Highlight,\n    HighlightArea,\n    Borders,\n} from 'react-vis';\nimport { connect } from 'react-redux';\nimport { Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n    },\n}));\nconst data = [\n    { x: 0, y: 8 },\n    { x: 1, y: 5 },\n    { x: 2, y: 4 },\n    { x: 3, y: 9 },\n    { x: 4, y: 1 },\n    { x: 5, y: 7 },\n    { x: 6, y: 6 },\n    { x: 7, y: 3 },\n    { x: 8, y: 2 },\n    { x: 9, y: 0 },\n];\nfunction LineSeriesVis(props: any) {\n    const classes = useStyles();\n    function formatAxisValue(value: number): number {\n        if (value > 1000) {\n            return value / 100;\n        }\n        return value;\n    }\n    return (\n        <Box\n            display=\"flex\"\n            flexWrap=\"nowrap\"\n            overflow=\"auto\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            className={classes.root}\n            id={'line-series'}\n            mx={15}\n        >\n            <List>\n                <XYPlot height={props.currentVisualisation.height} width={props.currentVisualisation.width} animation>\n                    <HorizontalGridLines style={{ stroke: '#B7E9ED' }} />\n                    <VerticalGridLines style={{ stroke: '#B7E9ED' }} />\n                    <XAxis\n                        // @ts-ignore\n                        tickFormat={(v) => formatAxisValue(v)}\n                        title={props.linePlotOptions.xValue}\n                        style={{ text: { stroke: 'none', fill: '#6b6b76', fontWeight: 600, margin: 5 } }}\n                    />\n                    <YAxis\n                        title={props.linePlotOptions.yValue}\n                        // left={50}\n                        // @ts-ignore\n                        tickFormat={(v) => formatAxisValue(v)}\n                        style={{ text: { stroke: 'none', fill: '#6b6b76', fontWeight: 600, margin: 5 } }}\n                    />\n\n                    <LineSeries\n                        strokeStyle={props.currentVisualisation.lineStyle}\n                        opacity={props.currentVisualisation.opacity}\n                        curve={props.currentVisualisation.curve}\n                        data={props.currentVisualisation.data}\n                        color={props.currentVisualisation.colour}\n                    />\n                </XYPlot>\n            </List>\n        </Box>\n    );\n}\nconst mapStateToProps = (state: any) => ({\n    currentVisualisation: state.currentVisualisation,\n    linePlotOptions: state.linePlotOptions,\n});\nexport default connect(mapStateToProps, {})(LineSeriesVis);\n",{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":6,"column":7,"nodeType":"221","messageId":"222","endLine":6,"endColumn":16},{"ruleId":"223","severity":1,"message":"220","line":7,"column":7,"nodeType":"221","messageId":"222","endLine":7,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":3,"column":15,"nodeType":"221","messageId":"222","endLine":3,"endColumn":19},{"ruleId":"223","severity":1,"message":"225","line":4,"column":10,"nodeType":"221","messageId":"222","endLine":4,"endColumn":20},{"ruleId":"223","severity":1,"message":"226","line":4,"column":22,"nodeType":"221","messageId":"222","endLine":4,"endColumn":28},{"ruleId":"223","severity":1,"message":"227","line":4,"column":30,"nodeType":"221","messageId":"222","endLine":4,"endColumn":47},{"ruleId":"223","severity":1,"message":"228","line":4,"column":49,"nodeType":"221","messageId":"222","endLine":4,"endColumn":68},{"ruleId":"223","severity":1,"message":"229","line":4,"column":70,"nodeType":"221","messageId":"222","endLine":4,"endColumn":75},{"ruleId":"223","severity":1,"message":"230","line":4,"column":77,"nodeType":"221","messageId":"222","endLine":4,"endColumn":82},{"ruleId":"223","severity":1,"message":"231","line":3,"column":10,"nodeType":"221","messageId":"222","endLine":3,"endColumn":21},{"ruleId":"223","severity":1,"message":"232","line":10,"column":5,"nodeType":"221","messageId":"222","endLine":10,"endColumn":10},{"ruleId":"223","severity":1,"message":"233","line":2,"column":15,"nodeType":"221","messageId":"222","endLine":2,"endColumn":21},{"ruleId":"223","severity":1,"message":"234","line":2,"column":23,"nodeType":"221","messageId":"222","endLine":2,"endColumn":32},{"ruleId":"223","severity":1,"message":"224","line":2,"column":43,"nodeType":"221","messageId":"222","endLine":2,"endColumn":47},{"ruleId":"223","severity":1,"message":"232","line":2,"column":73,"nodeType":"221","messageId":"222","endLine":2,"endColumn":78},{"ruleId":"223","severity":1,"message":"235","line":2,"column":15,"nodeType":"221","messageId":"222","endLine":2,"endColumn":26},{"ruleId":"223","severity":1,"message":"224","line":2,"column":64,"nodeType":"221","messageId":"222","endLine":2,"endColumn":68},{"ruleId":"223","severity":1,"message":"236","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":3,"column":15,"nodeType":"221","messageId":"222","endLine":3,"endColumn":19},{"ruleId":"223","severity":1,"message":"237","line":11,"column":5,"nodeType":"221","messageId":"222","endLine":11,"endColumn":15},{"ruleId":"223","severity":1,"message":"238","line":12,"column":5,"nodeType":"221","messageId":"222","endLine":12,"endColumn":14},{"ruleId":"223","severity":1,"message":"239","line":13,"column":5,"nodeType":"221","messageId":"222","endLine":13,"endColumn":18},{"ruleId":"223","severity":1,"message":"240","line":14,"column":5,"nodeType":"221","messageId":"222","endLine":14,"endColumn":12},{"ruleId":"223","severity":1,"message":"232","line":17,"column":10,"nodeType":"221","messageId":"222","endLine":17,"endColumn":15},{"ruleId":"223","severity":1,"message":"241","line":25,"column":7,"nodeType":"221","messageId":"222","endLine":25,"endColumn":11},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","'LineSeries' is defined but never used.","'XYPlot' is defined but never used.","'VerticalGridLines' is defined but never used.","'HorizontalGridLines' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'ColorPicker' is defined but never used.","'Paper' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'CssBaseline' is defined but never used.","'useState' is defined but never used.","'ChartLabel' is defined but never used.","'Highlight' is defined but never used.","'HighlightArea' is defined but never used.","'Borders' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]