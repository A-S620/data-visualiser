[{"/Users/aatikaseedat/Documents/data-visualiser/src/index.js":"1","/Users/aatikaseedat/Documents/data-visualiser/src/App.js":"2","/Users/aatikaseedat/Documents/data-visualiser/src/serviceWorker.js":"3","/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/store.js":"4","/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Reducers/ReduxReducer.js":"5","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Navigation/UserNavigation.tsx":"6","/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/ReduxState.js":"7","/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Actions/ReducerActionTypes.js":"8","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Navigation/TabPanel.js":"9","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Settings/Settings.js":"10","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Home/Home.js":"11","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Export/Export.js":"12","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/PlottingPage.tsx":"13","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/PlottingNav.tsx":"14","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/Import/ImportedFileStats.tsx":"15","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Notifications/AlertNotification.tsx":"16","/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/ImportFilesHandler.tsx":"17","/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/NotificationsHandler.tsx":"18","/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/INotification.tsx":"19","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LinePlottingPage.tsx":"20","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/ImportFileData.tsx":"21","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/ResetImportedData.tsx":"22","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/ResetAnalysedData.tsx":"23","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LinePlottingOptions.tsx":"24","/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Actions/ReducerActions.tsx":"25","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/CreateAnalysedData.tsx":"26","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/GetImportedData.tsx":"27","/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/LinePlotOptionsHandler.tsx":"28","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/CreateImportedData.tsx":"29","/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/plotting/ILinePlotOptions.tsx":"30","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/FileProcessors/CSVProcessor.tsx":"31","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/ResetLinePlotOptions.tsx":"32","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/CreateLinePlotOptions.tsx":"33","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/GetLinePlotOptions.tsx":"34","/Users/aatikaseedat/Documents/data-visualiser/src/domain/LineSeriesVis/LineSeriesOptionsValidate.tsx":"35","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/ImportFilesComponent.tsx":"36","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/Analyse/FileAnalysisComponent.tsx":"37","/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/LineSeriesVisHandler.tsx":"38","/Users/aatikaseedat/Documents/data-visualiser/src/domain/LineSeriesVis/LineSeriesCreateVis.tsx":"39","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/GetAnalysedData.tsx":"40","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/CurrentVisualisation/ResetCurrentVisualisation.tsx":"41","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/CurrentVisualisation/CreateCurrentVisualisation.tsx":"42","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LineSeriesVis.tsx":"43","/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/plotting/ILinePlotCreateVis.tsx":"44","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/DataAnalysis/AnalyseIntervalData.tsx":"45","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/Analyse/FieldTypes.tsx":"46","/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/import/IAnalysedFileData.tsx":"47","/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/AnalyseFileHandler.tsx":"48","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/AnalyseFileData.tsx":"49"},{"size":1620,"mtime":1609579694144,"results":"50","hashOfConfig":"51"},{"size":233,"mtime":1609946572554,"results":"52","hashOfConfig":"51"},{"size":5854,"mtime":1608309343000,"results":"53","hashOfConfig":"51"},{"size":215,"mtime":1608735235191,"results":"54","hashOfConfig":"51"},{"size":3002,"mtime":1611262782713,"results":"55","hashOfConfig":"51"},{"size":2809,"mtime":1611132266338,"results":"56","hashOfConfig":"51"},{"size":318,"mtime":1611261695531,"results":"57","hashOfConfig":"51"},{"size":793,"mtime":1611261823118,"results":"58","hashOfConfig":"51"},{"size":601,"mtime":1608732474371,"results":"59","hashOfConfig":"51"},{"size":966,"mtime":1608732749916,"results":"60","hashOfConfig":"51"},{"size":614,"mtime":1610558733032,"results":"61","hashOfConfig":"51"},{"size":962,"mtime":1608732474397,"results":"62","hashOfConfig":"51"},{"size":550,"mtime":1609327048703,"results":"63","hashOfConfig":"51"},{"size":5075,"mtime":1609748221737,"results":"64","hashOfConfig":"51"},{"size":2272,"mtime":1609946362973,"results":"65","hashOfConfig":"51"},{"size":1073,"mtime":1611590611835,"results":"66","hashOfConfig":"51"},{"size":1105,"mtime":1611678040239,"results":"67","hashOfConfig":"51"},{"size":607,"mtime":1610266600513,"results":"68","hashOfConfig":"51"},{"size":168,"mtime":1610968410686,"results":"69","hashOfConfig":"51"},{"size":949,"mtime":1610787931801,"results":"70","hashOfConfig":"51"},{"size":2487,"mtime":1610266600603,"results":"71","hashOfConfig":"51"},{"size":264,"mtime":1608733523669,"results":"72","hashOfConfig":"51"},{"size":258,"mtime":1608733523665,"results":"73","hashOfConfig":"51"},{"size":16739,"mtime":1611677100675,"results":"74","hashOfConfig":"51"},{"size":1920,"mtime":1611565679594,"results":"75","hashOfConfig":"51"},{"size":798,"mtime":1611565679607,"results":"76","hashOfConfig":"51"},{"size":799,"mtime":1609946360577,"results":"77","hashOfConfig":"51"},{"size":1725,"mtime":1610640470313,"results":"78","hashOfConfig":"51"},{"size":769,"mtime":1609946360428,"results":"79","hashOfConfig":"51"},{"size":648,"mtime":1610997885803,"results":"80","hashOfConfig":"51"},{"size":1805,"mtime":1610266600528,"results":"81","hashOfConfig":"51"},{"size":263,"mtime":1610027177763,"results":"82","hashOfConfig":"51"},{"size":498,"mtime":1610027217593,"results":"83","hashOfConfig":"51"},{"size":285,"mtime":1610027556180,"results":"84","hashOfConfig":"51"},{"size":2057,"mtime":1610872073188,"results":"85","hashOfConfig":"51"},{"size":9955,"mtime":1611589041429,"results":"86","hashOfConfig":"51"},{"size":5238,"mtime":1611679424519,"results":"87","hashOfConfig":"51"},{"size":703,"mtime":1610640470189,"results":"88","hashOfConfig":"51"},{"size":2600,"mtime":1611391432026,"results":"89","hashOfConfig":"51"},{"size":809,"mtime":1611391432017,"results":"90","hashOfConfig":"51"},{"size":276,"mtime":1610638778765,"results":"91","hashOfConfig":"51"},{"size":522,"mtime":1610638594826,"results":"92","hashOfConfig":"51"},{"size":2795,"mtime":1610998218952,"results":"93","hashOfConfig":"51"},{"size":317,"mtime":1610874793490,"results":"94","hashOfConfig":"51"},{"size":3425,"mtime":1611678298235,"results":"95","hashOfConfig":"51"},{"size":9148,"mtime":1611677392051,"results":"96","hashOfConfig":"51"},{"size":352,"mtime":1611391432035,"results":"97","hashOfConfig":"51"},{"size":1298,"mtime":1611590607895,"results":"98","hashOfConfig":"51"},{"size":2022,"mtime":1611391432043,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1llt5h",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"113"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"113"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"113"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"113"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"113"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"113"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"113"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"/Users/aatikaseedat/Documents/data-visualiser/src/index.js",[],["208","209"],"/Users/aatikaseedat/Documents/data-visualiser/src/App.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/serviceWorker.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/store.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Reducers/ReduxReducer.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Navigation/UserNavigation.tsx",[],["210","211"],"/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/ReduxState.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Actions/ReducerActionTypes.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Navigation/TabPanel.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Settings/Settings.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Home/Home.js",["212"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nimport ImportFilesComponent from '../ImportFileHandling/ImportFilesComponent';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    alignItemsAndJustifyContent: {\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'pink',\n    },\n}));\n\nexport default function Home() {\n    return (\n        <main id={'home-page'}>\n            <ImportFilesComponent />\n        </main>\n    );\n}\n","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Export/Export.js",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/PlottingPage.tsx",["213"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport PlottingNav from './PlottingNav';\nimport { Box } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(16),\n            height: theme.spacing(16),\n        },\n    },\n}));\n\nexport default function PlottingPage() {\n    return (\n        <Box>\n            <PlottingNav />\n        </Box>\n    );\n}\n","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/PlottingNav.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/Import/ImportedFileStats.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Notifications/AlertNotification.tsx",["214","215"],"import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { INotification } from '../../../interfaces/INotification';\nimport { Collapse, IconButton, Snackbar } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nexport default function AlertNotification(notifications: INotification) {\n    const [open, setOpen] = React.useState(true);\n    console.log('beep');\n    return (\n        <Snackbar\n            open={open}\n            id=\"notification-alert\"\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n            // severity={notifications.alert}\n            action={\n                <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                        setOpen(false);\n                    }}\n                >\n                    <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n            }\n            message={notifications.notification}\n        />\n    );\n}\n","/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/ImportFilesHandler.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/NotificationsHandler.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/INotification.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LinePlottingPage.tsx",["216","217","218","219","220","221","222"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Grid } from '@material-ui/core';\nimport { LineSeries, XYPlot, VerticalGridLines, HorizontalGridLines, XAxis, YAxis } from 'react-vis';\nimport LineSeriesVis from './LineSeriesVis';\nimport LinePlottingOptions from './LinePlottingOptions';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n    },\n}));\n\nexport default function LinePlottingPage() {\n    const classes = useStyles();\n    return (\n        <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            className={classes.root}\n            id={'line-plotting-page'}\n        >\n            <Box mx={10}>\n                <LineSeriesVis />\n            </Box>\n            <Box mx={10}>\n                <LinePlottingOptions />\n            </Box>\n        </Box>\n    );\n}\n","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/ImportFileData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/ResetImportedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/ResetAnalysedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LinePlottingOptions.tsx",["223","224"],"/Users/aatikaseedat/Documents/data-visualiser/src/ReduxStore/Actions/ReducerActions.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/CreateAnalysedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/GetImportedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/LinePlotOptionsHandler.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/ImportedData/CreateImportedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/plotting/ILinePlotOptions.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/FileProcessors/CSVProcessor.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/ResetLinePlotOptions.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/CreateLinePlotOptions.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/LinePlotOptions/GetLinePlotOptions.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/LineSeriesVis/LineSeriesOptionsValidate.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/ImportFilesComponent.tsx",["225","226","227","228","229","230"],"import React from 'react';\nimport {\n    Box,\n    Button,\n    Container,\n    Divider,\n    Grid,\n    IconButton,\n    makeStyles,\n    Paper,\n    Tooltip,\n    Dialog,\n    DialogContent,\n    ClickAwayListener,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DropzoneArea } from 'material-ui-dropzone';\n\nimport { AlertType } from '../../../interfaces/INotification';\n\nimport { NotificationsHandler } from '../../../UIHandling/NotificationsHandler';\nimport { ImportFilesHandler } from '../../../UIHandling/ImportFilesHandler';\n\nimport AlertNotification from '../Notifications/AlertNotification';\nimport { IImportedFile } from '../../../interfaces/import/IImportedFile';\n\nimport ImportedFileStats from './Import/ImportedFileStats';\nimport { IImportedFileStats } from '../../../interfaces/import/IImportedFileStats';\nimport FileAnalysisComponent from './Analyse/FileAnalysisComponent';\nimport Slide from '@material-ui/core/Slide';\nimport FieldTypes from './Analyse/FieldTypes';\n\ninterface IState {\n    importedFiles: Array<File>;\n    submitButtonDisabled: boolean;\n    outcome: AlertType | undefined;\n    outcomeMessage: string;\n    errors: NotificationsHandler;\n    files: string;\n    fileType: string;\n    importedFileStats: IImportedFileStats;\n    fieldTypesDialogOpen: boolean;\n}\nexport default class ImportFilesComponent extends React.Component<{}, IState> {\n    private classes: any = makeStyles((theme) => ({\n        root: {\n            height: '100%',\n            width: '75%',\n        },\n        componentArea: {\n            height: '70%',\n            width: '75%',\n        },\n        container: {\n            width: '100%',\n        },\n        verticalLine: {\n            background: theme.palette.primary.light,\n            width: '2px',\n            margin: theme.spacing(7),\n        },\n        space: {\n            minWidth: '10%',\n        },\n        dialogPaper: {\n            width: '500px',\n            height: '700px',\n        },\n    }));\n    constructor(props: object) {\n        super(props);\n        this.state = {\n            importedFiles: [],\n            submitButtonDisabled: true,\n            outcome: undefined,\n            outcomeMessage: '',\n            errors: new NotificationsHandler(),\n            files: '',\n            fileType: '',\n            importedFileStats: {\n                fileType: '',\n                fileSize: '',\n                characterCount: undefined,\n            },\n            fieldTypesDialogOpen: false,\n        };\n    }\n    private static checkFileType(files: File[]): string {\n        const file = files[0];\n        return file.type;\n    }\n    private async addFiles(files: File[]) {\n        this.setState({ importedFiles: files });\n        if (files.length > 0) {\n            const allFiles = await files[0].text();\n            this.setState({\n                submitButtonDisabled: false,\n                files: allFiles,\n                fileType: ImportFilesComponent.checkFileType(files),\n                importedFileStats: {\n                    fileType: ImportFilesComponent.checkFileType(files),\n                    fileSize: (files[0].size / 1000).toString(),\n                    characterCount: allFiles.length,\n                },\n            });\n        } else {\n            this.setState({\n                submitButtonDisabled: true,\n            });\n        }\n    }\n    private async uploadFiles() {\n        const file: IImportedFile = {\n            file: this.state.files,\n            fileType: this.state.fileType,\n        };\n        const files = new ImportFilesHandler(file);\n        const errors: NotificationsHandler = files.validate();\n        if (errors.isEmpty()) {\n            try {\n                this.setState({\n                    outcome: AlertType.SUCCESS,\n                    outcomeMessage: 'Files successfully uploaded',\n                    fieldTypesDialogOpen: true,\n                });\n            } catch (e) {\n                this.setState({\n                    outcome: AlertType.FAILED,\n                    outcomeMessage: `${e.notification}`,\n                });\n            }\n        } else {\n            this.setState({ errors });\n        }\n    }\n    private resetFiles() {\n        const file: IImportedFile = {\n            file: this.state.files,\n            fileType: this.state.fileType,\n        };\n        const files = new ImportFilesHandler(file);\n        files.resetImportedData();\n        this.setState({\n            importedFiles: [],\n            submitButtonDisabled: true,\n            outcome: undefined,\n            outcomeMessage: '',\n            errors: new NotificationsHandler(),\n            files: '',\n            fileType: '',\n            importedFileStats: {\n                fileType: '',\n                fileSize: '',\n                characterCount: undefined,\n            },\n        });\n    }\n    public render() {\n        return (\n            <main>\n                <Dialog\n                    open={this.state.fieldTypesDialogOpen}\n                    classes={{ paper: this.classes.dialogPaper }}\n                    onBackdropClick={() => {\n                        this.setState({ fieldTypesDialogOpen: false });\n                    }}\n                >\n                    <Box\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                        flexDirection=\"column\"\n                        alignItems=\"center\"\n                        className={this.classes.root}\n                        id={'import-file-component'}\n                        my={15}\n                        mx={15}\n                    >\n                        <FieldTypes />\n                    </Box>\n                </Dialog>\n                <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    flexDirection=\"column\"\n                    alignItems=\"center\"\n                    className={this.classes.root}\n                    id={'import-file-component'}\n                    my={15}\n                    mx={15}\n                >\n                    <Box style={{ height: '50%', width: '50%' }} my={15} id={'alert-area'}>\n                        {this.state.outcome && (\n                            <AlertNotification alert={this.state.outcome} notification={this.state.outcomeMessage} />\n                        )}\n                        {!this.state.errors.isEmpty() && (\n                            <AlertNotification\n                                alert={AlertType.FAILED}\n                                notification={`Error(s): ${this.state.errors.notification()}`}\n                            />\n                        )}\n                    </Box>\n                    <Box\n                        display=\"flex\"\n                        flexDirection=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"flex-start\"\n                        className={this.classes.componentArea}\n                    >\n                        <Box id=\"drop-zone-area\" mx={15} my={15}>\n                            <Tooltip title=\"Delete Imported File from system\">\n                                <IconButton\n                                    color=\"primary\"\n                                    style={{ marginRight: 10, borderRadius: '5em' }}\n                                    id=\"delete-import-button\"\n                                    disabled={this.state.submitButtonDisabled}\n                                    onClick={() => {\n                                        this.resetFiles();\n                                    }}\n                                >\n                                    <DeleteIcon />\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip title=\"View and edit the field types\">\n                                <Button\n                                    style={{ marginRight: 10, borderRadius: '5em' }}\n                                    id=\"field-types-button\"\n                                    color=\"primary\"\n                                    disabled={this.state.submitButtonDisabled}\n                                    onClick={() => {\n                                        this.setState({\n                                            fieldTypesDialogOpen: true,\n                                        });\n                                    }}\n                                >\n                                    Field Types\n                                </Button>\n                            </Tooltip>\n                            <DropzoneArea\n                                showPreviews={true}\n                                onChange={async (files) => {\n                                    await this.addFiles(files);\n                                    await this.uploadFiles();\n                                }}\n                                showPreviewsInDropzone={false}\n                                useChipsForPreview\n                                previewGridProps={{ container: { spacing: 1, direction: 'row' } }}\n                                previewChipProps={{ classes: { root: this.classes.previewChip } }}\n                                previewText=\"Selected files\"\n                                showAlerts={false}\n                                // clearOnUnmount={true}\n                                acceptedFiles={['text/csv']}\n                                filesLimit={1}\n                            />\n\n                            <ImportedFileStats {...this.state.importedFileStats} />\n                        </Box>\n                        <Box mx={15} my={15}>\n                            <Divider orientation=\"vertical\" flexItem className={this.classes.verticalLine} />\n                            <FileAnalysisComponent />\n                        </Box>\n                    </Box>\n                </Box>\n            </main>\n        );\n    }\n}\n","/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/Analyse/FileAnalysisComponent.tsx",["231","232"],"/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/LineSeriesVisHandler.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/LineSeriesVis/LineSeriesCreateVis.tsx",["233"],"import GetLinePlotOptions from '../ReduxStoreHandling/LinePlotOptions/GetLinePlotOptions';\nimport GetAnalysedData from '../ReduxStoreHandling/AnalysedData/GetAnalysedData';\nimport { ILinePlotCreateVis } from '../../interfaces/plotting/ILinePlotCreateVis';\nimport { IAnalysedFileData } from '../../interfaces/import/IAnalysedFileData';\nimport { CurveType } from '../../interfaces/plotting/ILinePlotOptions';\n\nexport class LineSeriesCreateVis {\n    public createVis(): ILinePlotCreateVis {\n        const linePlotOptions = new GetLinePlotOptions().getLinePlotOptions();\n        if (Object.keys(linePlotOptions).length === 0) {\n            return this.createDefaultOptions();\n        }\n\n        return {\n            data: this.createDataArray(linePlotOptions.xValue, linePlotOptions.yValue),\n            height: linePlotOptions.height,\n            width: linePlotOptions.width,\n            colour: linePlotOptions.colour,\n            opacity: linePlotOptions.opacity,\n            curveType: linePlotOptions.curveType,\n            lineStyle: linePlotOptions.lineStyle,\n            lineWidth: linePlotOptions.lineWidth,\n        };\n    }\n    private createDefaultOptions(): ILinePlotCreateVis {\n        const { intervalFields } = this.getAnalysedData();\n        return {\n            data: this.createDataArray(intervalFields[0], intervalFields[1]),\n            height: 800,\n            width: 800,\n            colour: '#000000',\n            opacity: 1,\n            curveType: null,\n            lineStyle: undefined,\n            lineWidth: 2,\n        };\n    }\n\n    private getAnalysedData(): IAnalysedFileData {\n        const getAnalysedData = new GetAnalysedData();\n        return getAnalysedData.getAnalysedData();\n    }\n    private createDataObject(xValue: string, yValue: string, currentObject: Object): Object {\n        let x: number = 0;\n        let y: number = 0;\n        for (const [key, value] of Object.entries(currentObject)) {\n            if (key === xValue) {\n                x = value;\n            } else if (key === yValue) {\n                y = value;\n                return { x, y };\n            }\n        }\n        return {};\n    }\n\n    private createDataArray(xValue: string, yValue: string): Array<Object> {\n        const { intervalDataAsObjects: dataObjectsArray } = this.getAnalysedData();\n        const data: Array<Object> = [];\n        for (let objIndex = 0; objIndex < dataObjectsArray.length; objIndex += 1) {\n            const dataObject = this.createDataObject(xValue, yValue, dataObjectsArray[objIndex]);\n            data.push(dataObject);\n        }\n        return data;\n    }\n}\n","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/AnalysedData/GetAnalysedData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/CurrentVisualisation/ResetCurrentVisualisation.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ReduxStoreHandling/CurrentVisualisation/CreateCurrentVisualisation.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/Plotting/Line/LineSeriesVis.tsx",["234"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport { HorizontalGridLines, LineSeries, VerticalGridLines, XAxis, XYPlot, YAxis } from 'react-vis';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n    },\n    statDescription: {\n        margin: theme.spacing(1),\n        textAlign: 'left',\n        color: theme.palette.text.primary,\n    },\n}));\nconst data = [\n    { x: 0, y: 8 },\n    { x: 1, y: 5 },\n    { x: 2, y: 4 },\n    { x: 3, y: 9 },\n    { x: 4, y: 1 },\n    { x: 5, y: 7 },\n    { x: 6, y: 6 },\n    { x: 7, y: 3 },\n    { x: 8, y: 2 },\n    { x: 9, y: 0 },\n];\nfunction LineSeriesVis(props: any) {\n    const classes = useStyles();\n    return (\n        <Box\n            display=\"flex\"\n            flexWrap=\"nowrap\"\n            overflow=\"auto\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            className={classes.root}\n            id={'line-series'}\n            mx={15}\n        >\n            <Box>\n                <XYPlot\n                    id={'line-series-vis'}\n                    height={props.currentVisualisation.height}\n                    width={props.currentVisualisation.width}\n                    margin={{ left: 75 }}\n                >\n                    <HorizontalGridLines style={{ stroke: '#B7E9ED' }} />\n                    <VerticalGridLines style={{ stroke: '#B7E9ED' }} />\n                    <XAxis\n                        //@ts-ignore\n                        style={{ text: { stroke: 'none', fill: '#6b6b76', fontWeight: 600, margin: 5, padding: 5 } }}\n                    />\n                    <YAxis\n                        // left={50}\n                        style={{ text: { stroke: 'none', fill: '#6b6b76', fontWeight: 600, margin: 5, padding: 5 } }}\n                    />\n\n                    <LineSeries\n                        style={{\n                            strokeLinejoin: 'round',\n                            strokeWidth: props.currentVisualisation.lineWidth,\n                        }}\n                        strokeStyle={props.currentVisualisation.lineStyle}\n                        opacity={props.currentVisualisation.opacity}\n                        curve={props.currentVisualisation.curve}\n                        data={props.currentVisualisation.data}\n                        color={props.currentVisualisation.colour}\n                    />\n                </XYPlot>\n            </Box>\n        </Box>\n    );\n}\nconst mapStateToProps = (state: any) => ({\n    currentVisualisation: state.currentVisualisation,\n    linePlotOptions: state.linePlotOptions,\n});\nexport default connect(mapStateToProps, {})(LineSeriesVis);\n","/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/plotting/ILinePlotCreateVis.tsx",["235"],"/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/DataAnalysis/AnalyseIntervalData.tsx",["236"],"/Users/aatikaseedat/Documents/data-visualiser/src/UI/LoggedIn/ImportFileHandling/Analyse/FieldTypes.tsx",["237","238","239","240","241","242","243"],"/Users/aatikaseedat/Documents/data-visualiser/src/interfaces/import/IAnalysedFileData.tsx",[],"/Users/aatikaseedat/Documents/data-visualiser/src/UIHandling/AnalyseFileHandler.tsx",["244"],"import { NotificationsHandler } from './NotificationsHandler';\nimport { AnalyseIntervalData } from '../domain/ImportedFile/DataAnalysis/AnalyseIntervalData';\nimport ResetAnalysedData from '../domain/ReduxStoreHandling/AnalysedData/ResetAnalysedData';\nimport { AnalyseFileData } from '../domain/ImportedFile/AnalyseFileData';\nimport GetImportedData from '../domain/ReduxStoreHandling/ImportedData/GetImportedData';\n\nexport class AnalyseFileHandler {\n    private fields: any;\n    constructor(fields: Array<object>) {\n        this.fields = fields;\n    }\n    public validateAnalysedData(): NotificationsHandler {\n        const notifications = new NotificationsHandler();\n        const getImportedColumns = new GetImportedData().getImportedData().dataFields;\n        if (this.fields.length !== getImportedColumns.length) {\n            notifications.addNotification('Field types have not been selected for all fields');\n            return notifications;\n        } else {\n            const analyseData = new AnalyseFileData(this.fields);\n            notifications.concat(analyseData.validateAnalysedData());\n            return notifications;\n        }\n    }\n    public resetAnalysedData() {\n        const resetAnalysedData = new ResetAnalysedData();\n        resetAnalysedData.resetAnalysedData();\n    }\n}\n","/Users/aatikaseedat/Documents/data-visualiser/src/domain/ImportedFile/AnalyseFileData.tsx",[],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":6,"column":7,"nodeType":"251","messageId":"252","endLine":6,"endColumn":16},{"ruleId":"253","severity":1,"message":"250","line":7,"column":7,"nodeType":"251","messageId":"252","endLine":7,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":13},{"ruleId":"253","severity":1,"message":"255","line":5,"column":10,"nodeType":"251","messageId":"252","endLine":5,"endColumn":18},{"ruleId":"253","severity":1,"message":"256","line":3,"column":15,"nodeType":"251","messageId":"252","endLine":3,"endColumn":19},{"ruleId":"253","severity":1,"message":"257","line":4,"column":10,"nodeType":"251","messageId":"252","endLine":4,"endColumn":20},{"ruleId":"253","severity":1,"message":"258","line":4,"column":22,"nodeType":"251","messageId":"252","endLine":4,"endColumn":28},{"ruleId":"253","severity":1,"message":"259","line":4,"column":30,"nodeType":"251","messageId":"252","endLine":4,"endColumn":47},{"ruleId":"253","severity":1,"message":"260","line":4,"column":49,"nodeType":"251","messageId":"252","endLine":4,"endColumn":68},{"ruleId":"253","severity":1,"message":"261","line":4,"column":70,"nodeType":"251","messageId":"252","endLine":4,"endColumn":75},{"ruleId":"253","severity":1,"message":"262","line":4,"column":77,"nodeType":"251","messageId":"252","endLine":4,"endColumn":82},{"ruleId":"253","severity":1,"message":"263","line":3,"column":10,"nodeType":"251","messageId":"252","endLine":3,"endColumn":21},{"ruleId":"253","severity":1,"message":"264","line":10,"column":5,"nodeType":"251","messageId":"252","endLine":10,"endColumn":10},{"ruleId":"253","severity":1,"message":"265","line":5,"column":5,"nodeType":"251","messageId":"252","endLine":5,"endColumn":14},{"ruleId":"253","severity":1,"message":"256","line":7,"column":5,"nodeType":"251","messageId":"252","endLine":7,"endColumn":9},{"ruleId":"253","severity":1,"message":"264","line":10,"column":5,"nodeType":"251","messageId":"252","endLine":10,"endColumn":10},{"ruleId":"253","severity":1,"message":"266","line":13,"column":5,"nodeType":"251","messageId":"252","endLine":13,"endColumn":18},{"ruleId":"253","severity":1,"message":"267","line":14,"column":5,"nodeType":"251","messageId":"252","endLine":14,"endColumn":22},{"ruleId":"253","severity":1,"message":"268","line":30,"column":8,"nodeType":"251","messageId":"252","endLine":30,"endColumn":13},{"ruleId":"253","severity":1,"message":"269","line":2,"column":15,"nodeType":"251","messageId":"252","endLine":2,"endColumn":26},{"ruleId":"253","severity":1,"message":"256","line":2,"column":64,"nodeType":"251","messageId":"252","endLine":2,"endColumn":68},{"ruleId":"253","severity":1,"message":"270","line":5,"column":10,"nodeType":"251","messageId":"252","endLine":5,"endColumn":19},{"ruleId":"253","severity":1,"message":"271","line":18,"column":7,"nodeType":"251","messageId":"252","endLine":18,"endColumn":11},{"ruleId":"253","severity":1,"message":"272","line":1,"column":21,"nodeType":"251","messageId":"252","endLine":1,"endColumn":37},{"ruleId":"253","severity":1,"message":"273","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":26},{"ruleId":"253","severity":1,"message":"269","line":4,"column":5,"nodeType":"251","messageId":"252","endLine":4,"endColumn":16},{"ruleId":"253","severity":1,"message":"274","line":6,"column":5,"nodeType":"251","messageId":"252","endLine":6,"endColumn":21},{"ruleId":"253","severity":1,"message":"275","line":7,"column":5,"nodeType":"251","messageId":"252","endLine":7,"endColumn":9},{"ruleId":"253","severity":1,"message":"256","line":8,"column":5,"nodeType":"251","messageId":"252","endLine":8,"endColumn":9},{"ruleId":"253","severity":1,"message":"276","line":9,"column":5,"nodeType":"251","messageId":"252","endLine":9,"endColumn":13},{"ruleId":"253","severity":1,"message":"277","line":20,"column":5,"nodeType":"251","messageId":"252","endLine":20,"endColumn":15},{"ruleId":"253","severity":1,"message":"278","line":67,"column":10,"nodeType":"251","messageId":"252","endLine":67,"endColumn":33},{"ruleId":"253","severity":1,"message":"279","line":2,"column":10,"nodeType":"251","messageId":"252","endLine":2,"endColumn":29},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'Alert' is defined but never used.","'Collapse' is defined but never used.","'Grid' is defined but never used.","'LineSeries' is defined but never used.","'XYPlot' is defined but never used.","'VerticalGridLines' is defined but never used.","'HorizontalGridLines' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'ColorPicker' is defined but never used.","'Paper' is defined but never used.","'Container' is defined but never used.","'DialogContent' is defined but never used.","'ClickAwayListener' is defined but never used.","'Slide' is defined but never used.","'CssBaseline' is defined but never used.","'CurveType' is defined but never used.","'data' is assigned a value but never used.","'ILinePlotOptions' is defined but never used.","'CreateAnalysedData' is defined but never used.","'CircularProgress' is defined but never used.","'Chip' is defined but never used.","'ListItem' is defined but never used.","'InputLabel' is defined but never used.","'LinearProgressWithLabel' is defined but never used.","'AnalyseIntervalData' is defined but never used.","no-global-assign","no-unsafe-negation"]